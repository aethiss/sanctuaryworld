{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport reducers from './reducers/index';\nconst isServer = true;\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\nexport function initializeStore(initialState = {}) {\n  const composeEnhancers = composeWithDevTools({\n    realtime: true\n  });\n  return createStore(reducers, initialState, composeEnhancers(applyMiddleware(thunkMiddleware)));\n}\n\nfunction getOrCreateStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return initializeStore(initialState);\n  } // Create store if unavailable on the client and set it on the window object\n\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default (App => {\n  return class AppWithRedux extends React.Component {\n    static async getInitialProps(appContext) {\n      // Get or Create the store with `undefined` as initialState\n      // This allows you to set a custom default initialState\n      const reduxStore = getOrCreateStore(); // Provide the store to getInitialProps of pages\n\n      appContext.ctx.reduxStore = reduxStore;\n      let appProps = {};\n\n      if (typeof App.getInitialProps === 'function') {\n        appProps = await App.getInitialProps(appContext);\n      }\n\n      return _objectSpread({}, appProps, {\n        initialReduxState: reduxStore.getState()\n      });\n    }\n\n    constructor(props) {\n      super(props);\n      this.reduxStore = getOrCreateStore(props.initialReduxState);\n    }\n\n    render() {\n      return __jsx(App, _extends({}, this.props, {\n        reduxStore: this.reduxStore\n      }));\n    }\n\n  };\n});","map":{"version":3,"sources":["/Users/aethiss/Web/Projects/diablo/sanctuaryworld/src/redux/createStore.js"],"names":["React","createStore","applyMiddleware","composeWithDevTools","thunkMiddleware","reducers","isServer","__NEXT_REDUX_STORE__","initializeStore","initialState","composeEnhancers","realtime","getOrCreateStore","window","App","AppWithRedux","Component","getInitialProps","appContext","reduxStore","ctx","appProps","initialReduxState","getState","constructor","props","render"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,MAAMC,QAAQ,OAAd;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AAEA,OAAO,SAASC,eAAT,CAAyBC,YAAY,GAAG,EAAxC,EAA4C;AACjD,QAAMC,gBAAgB,GAAGP,mBAAmB,CAAC;AAAEQ,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAA5C;AACA,SAAOV,WAAW,CAChBI,QADgB,EAEhBI,YAFgB,EAGhBC,gBAAgB,CAACR,eAAe,CAACE,eAAD,CAAhB,CAHA,CAAlB;AAKD;;AAED,SAASQ,gBAAT,CAA0BH,YAA1B,EAAwC;AACtC;AACA,MAAIH,QAAJ,EAAc;AACZ,WAAOE,eAAe,CAACC,YAAD,CAAtB;AACD,GAJqC,CAMtC;;;AACA,MAAI,CAACI,MAAM,CAACN,oBAAD,CAAX,EAAmC;AACjCM,IAAAA,MAAM,CAACN,oBAAD,CAAN,GAA+BC,eAAe,CAACC,YAAD,CAA9C;AACD;;AACD,SAAOI,MAAM,CAACN,oBAAD,CAAb;AACD;;AAED,gBAAeO,GAAG,IAAI;AACpB,SAAO,MAAMC,YAAN,SAA2Bf,KAAK,CAACgB,SAAjC,CAA2C;AAChD,iBAAaC,eAAb,CAA6BC,UAA7B,EAAyC;AACvC;AACA;AACA,YAAMC,UAAU,GAAGP,gBAAgB,EAAnC,CAHuC,CAKvC;;AACAM,MAAAA,UAAU,CAACE,GAAX,CAAeD,UAAf,GAA4BA,UAA5B;AAEA,UAAIE,QAAQ,GAAG,EAAf;;AACA,UAAI,OAAOP,GAAG,CAACG,eAAX,KAA+B,UAAnC,EAA+C;AAC7CI,QAAAA,QAAQ,GAAG,MAAMP,GAAG,CAACG,eAAJ,CAAoBC,UAApB,CAAjB;AACD;;AAED,+BACKG,QADL;AAEEC,QAAAA,iBAAiB,EAAEH,UAAU,CAACI,QAAX;AAFrB;AAID;;AAEDC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;AACA,WAAKN,UAAL,GAAkBP,gBAAgB,CAACa,KAAK,CAACH,iBAAP,CAAlC;AACD;;AAEDI,IAAAA,MAAM,GAAG;AACP,aAAO,MAAC,GAAD,eAAS,KAAKD,KAAd;AAAqB,QAAA,UAAU,EAAE,KAAKN;AAAtC,SAAP;AACD;;AA3B+C,GAAlD;AA6BD,CA9BD","sourcesContent":["import React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunkMiddleware from 'redux-thunk'\nimport reducers from './reducers/index'\n\nconst isServer = typeof window === 'undefined'\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__'\n\nexport function initializeStore(initialState = {}) {\n  const composeEnhancers = composeWithDevTools({ realtime: true })\n  return createStore(\n    reducers,\n    initialState,\n    composeEnhancers(applyMiddleware(thunkMiddleware))\n  )\n}\n\nfunction getOrCreateStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return initializeStore(initialState)\n  }\n\n  // Create store if unavailable on the client and set it on the window object\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState)\n  }\n  return window[__NEXT_REDUX_STORE__]\n}\n\nexport default App => {\n  return class AppWithRedux extends React.Component {\n    static async getInitialProps(appContext) {\n      // Get or Create the store with `undefined` as initialState\n      // This allows you to set a custom default initialState\n      const reduxStore = getOrCreateStore()\n\n      // Provide the store to getInitialProps of pages\n      appContext.ctx.reduxStore = reduxStore\n\n      let appProps = {}\n      if (typeof App.getInitialProps === 'function') {\n        appProps = await App.getInitialProps(appContext)\n      }\n\n      return {\n        ...appProps,\n        initialReduxState: reduxStore.getState(),\n      }\n    }\n\n    constructor(props) {\n      super(props)\n      this.reduxStore = getOrCreateStore(props.initialReduxState)\n    }\n\n    render() {\n      return <App {...this.props} reduxStore={this.reduxStore} />\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}